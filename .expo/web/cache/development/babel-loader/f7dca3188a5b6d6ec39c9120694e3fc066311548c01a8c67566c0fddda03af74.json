{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { IconButton, Text, useTheme, TouchableRipple } from 'react-native-paper';\nimport Day, { EmptyDay } from \"./Day\";\nimport { addMonths, areDatesOnSameDay, daySize, getDaysInMonth, getFirstDayOfMonth, getRealIndex, getGridCount, isDateBetween, gridCounts, showWeekDay, startAtIndex, beginOffset, estimatedMonthHeight, useRangeChecker } from \"./dateUtils\";\nimport { getCalendarHeaderHeight } from \"./CalendarHeader\";\nimport { dayNamesHeight } from \"./DayNames\";\nimport { useTextColorOnPrimary } from \"../utils\";\nfunction Month(props) {\n  var index = props.index,\n    mode = props.mode,\n    date = props.date,\n    dates = props.dates,\n    startDate = props.startDate,\n    endDate = props.endDate,\n    onPressYear = props.onPressYear,\n    selectingYear = props.selectingYear,\n    onPressDate = props.onPressDate,\n    scrollMode = props.scrollMode,\n    primaryColor = props.primaryColor,\n    selectColor = props.selectColor,\n    roundness = props.roundness,\n    disableWeekDays = props.disableWeekDays,\n    locale = props.locale,\n    validRange = props.validRange;\n  var theme = useTheme();\n  var textColorOnPrimary = useTextColorOnPrimary();\n  var realIndex = getRealIndex(index);\n  var isHorizontal = scrollMode === 'horizontal';\n  var _useRangeChecker = useRangeChecker(validRange),\n    isDisabled = _useRangeChecker.isDisabled,\n    isWithinValidRange = _useRangeChecker.isWithinValidRange;\n  var _React$useMemo = React.useMemo(function () {\n      var md = addMonths(new Date(), realIndex);\n      var y = md.getFullYear();\n      var m = md.getMonth();\n      var formatter = new Intl.DateTimeFormat(locale, {\n        month: 'long'\n      });\n      return {\n        monthName: formatter.format(md),\n        month: m,\n        year: y\n      };\n    }, [realIndex, locale]),\n    monthName = _React$useMemo.monthName,\n    month = _React$useMemo.month,\n    year = _React$useMemo.year;\n  var grid = React.useMemo(function () {\n    var today = new Date();\n    var daysInMonth = getDaysInMonth({\n      year: year,\n      month: month\n    });\n    var dayOfWeek = getFirstDayOfMonth({\n      year: year,\n      month: month\n    });\n    var emptyDays = dayOfWeek;\n    return monthGrid(index).map(function (_ref) {\n      var days = _ref.days,\n        weekGrid = _ref.weekGrid;\n      return {\n        weekIndex: weekGrid,\n        generatedDays: days.map(function (_, dayIndex) {\n          var isFirstWeek = weekGrid === 0;\n          var realDayIndex = emptyDays - dayIndex;\n          var beforeWeekDay = isFirstWeek && realDayIndex > 0;\n          var dayOfMonth = weekGrid * 7 + dayIndex - emptyDays + 1;\n          var afterWeekDay = dayOfMonth > daysInMonth;\n          var day = new Date(year, month, dayOfMonth);\n          var isToday = areDatesOnSameDay(day, today);\n          var inRange = false;\n          var disabled = isDisabled(day);\n          var selected = false;\n          var leftCrop = dayOfMonth === 1;\n          var rightCrop = dayOfMonth === daysInMonth;\n          var isFirstDayOfMonth = dayOfMonth === 1;\n          var isLastDayOfMonth = dayOfMonth === daysInMonth;\n          if (mode === 'range') {\n            var selectedStartDay = areDatesOnSameDay(day, startDate);\n            var selectedEndDay = areDatesOnSameDay(day, endDate);\n            selected = selectedStartDay || selectedEndDay;\n            inRange = isDateBetween(day, {\n              startDate: startDate,\n              endDate: endDate\n            });\n            if (selectedStartDay) {\n              leftCrop = true;\n            }\n            if (selectedEndDay) {\n              rightCrop = true;\n            }\n            if (dayIndex === 0 && !selectedStartDay) {\n              leftCrop = false;\n            }\n            if (dayIndex === 6 && !selectedEndDay) {\n              rightCrop = false;\n            }\n            if (isFirstDayOfMonth && selectedEndDay || isLastDayOfMonth && selectedStartDay) {\n              inRange = false;\n            }\n          } else if (mode === 'multiple') {\n            var safeDates = dates || [];\n            selected = safeDates.some(function (d) {\n              return areDatesOnSameDay(day, d);\n            });\n            var yesterday = new Date(year, month, dayOfMonth - 1);\n            var tomorrow = new Date(year, month, dayOfMonth + 1);\n            var yesterdaySelected = safeDates.some(function (d) {\n              return areDatesOnSameDay(d, yesterday);\n            });\n            var tomorrowSelected = safeDates.some(function (d) {\n              return areDatesOnSameDay(d, tomorrow);\n            });\n            if (selected) {\n              if (tomorrowSelected && yesterdaySelected) {\n                inRange = true;\n              }\n              if (tomorrowSelected && !yesterdaySelected) {\n                inRange = true;\n                leftCrop = true;\n              }\n              if (yesterdaySelected && !tomorrowSelected) {\n                inRange = true;\n                rightCrop = true;\n              }\n              if (isFirstDayOfMonth && !tomorrowSelected) {\n                inRange = false;\n              }\n              if (isLastDayOfMonth && !yesterdaySelected) {\n                inRange = false;\n              }\n              if (inRange && !leftCrop && !rightCrop) {\n                selected = false;\n              }\n            }\n          } else if (mode === 'single') {\n            selected = areDatesOnSameDay(day, date);\n          }\n          var isWithinOptionalValidRange = isWithinValidRange(day);\n          if (inRange && !disabled) {\n            disabled = false;\n          }\n          if (!isWithinOptionalValidRange) {\n            disabled = true;\n          }\n          return {\n            beforeWeekDay: beforeWeekDay,\n            afterWeekDay: afterWeekDay,\n            year: year,\n            month: month,\n            dayOfMonth: dayOfMonth,\n            dayIndex: dayIndex,\n            mode: mode,\n            selected: selected,\n            inRange: inRange,\n            leftCrop: leftCrop,\n            rightCrop: rightCrop,\n            isToday: isToday,\n            disabled: disabled\n          };\n        })\n      };\n    });\n  }, [year, month, index, isDisabled, mode, isWithinValidRange, startDate, endDate, dates, date]);\n  var textFont = theme !== null && theme !== void 0 && theme.isV3 ? theme.fonts.titleSmall : theme.fonts.medium;\n  return React.createElement(View, {\n    style: [styles.month, {\n      height: getMonthHeight(scrollMode, index)\n    }]\n  }, React.createElement(View, {\n    style: [styles.monthHeader, isHorizontal ? {\n      marginTop: monthHeaderSingleMarginTop,\n      marginBottom: monthHeaderSingleMarginBottom\n    } : null]\n  }, React.createElement(TouchableRipple, {\n    disabled: !isHorizontal,\n    onPress: isHorizontal ? function () {\n      return onPressYear(year);\n    } : undefined,\n    accessibilityRole: \"button\",\n    accessibilityLabel: monthName + \" \" + year,\n    style: [styles.yearButton, {\n      borderRadius: roundness\n    }]\n  }, React.createElement(View, {\n    style: [styles.yearButtonInner, {\n      borderRadius: roundness\n    }]\n  }, React.createElement(Text, {\n    style: [styles.monthLabel, _objectSpread(_objectSpread({}, textFont), {}, {\n      color: theme.isV3 ? theme.colors.onSurfaceVariant : theme.colors.onSurface\n    })],\n    selectable: false\n  }, monthName, \" \", year), React.createElement(View, {\n    style: isHorizontal ? styles.opacity1 : styles.opacity0\n  }, React.createElement(IconButton, {\n    onPress: isHorizontal ? function () {\n      return onPressYear(year);\n    } : undefined,\n    icon: selectingYear ? theme.isV3 ? 'menu-up' : 'chevron-up' : theme.isV3 ? 'menu-down' : 'chevron-down'\n  }))))), grid.map(function (_ref2) {\n    var weekIndex = _ref2.weekIndex,\n      generatedDays = _ref2.generatedDays;\n    return React.createElement(View, {\n      style: styles.week,\n      key: weekIndex\n    }, generatedDays.filter(function (gd) {\n      return showWeekDay(gd.dayIndex, disableWeekDays);\n    }).map(function (gd) {\n      return gd.beforeWeekDay || gd.afterWeekDay ? React.createElement(EmptyDay, {\n        key: gd.dayIndex\n      }) : React.createElement(Day, {\n        key: gd.dayIndex,\n        theme: theme,\n        day: gd.dayOfMonth,\n        month: gd.month,\n        year: gd.year,\n        selected: gd.selected,\n        inRange: gd.inRange,\n        leftCrop: gd.leftCrop,\n        rightCrop: gd.rightCrop,\n        onPressDate: onPressDate,\n        isToday: gd.isToday,\n        selectColor: selectColor,\n        primaryColor: primaryColor,\n        disabled: gd.disabled,\n        textColorOnPrimary: textColorOnPrimary\n      });\n    }));\n  }));\n}\nexport var weekMargin = 6;\nexport var weekSize = daySize + weekMargin;\nexport var montHeaderHeight = 56;\nexport var monthHeaderSingleMarginTop = 4;\nexport var monthHeaderSingleMarginBottom = 8 + 44 + 12;\nexport var monthHeaderSingleHeight = monthHeaderSingleMarginTop + monthHeaderSingleMarginBottom;\nvar styles = StyleSheet.create({\n  week: {\n    flexDirection: 'row',\n    marginBottom: weekMargin,\n    height: daySize\n  },\n  month: {},\n  monthHeader: {\n    height: montHeaderHeight,\n    justifyContent: 'center',\n    overflow: 'hidden'\n  },\n  monthLabel: {\n    fontSize: 14,\n    opacity: 0.7\n  },\n  yearButton: {\n    alignSelf: 'flex-start',\n    marginLeft: 6\n  },\n  yearButtonInner: {\n    paddingLeft: 16,\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  opacity0: {\n    opacity: 0\n  },\n  opacity1: {\n    opacity: 1\n  }\n});\nvar monthGrid = function monthGrid(index) {\n  return Array(getGridCount(index)).fill(null).map(function (_, weekGrid) {\n    var days = Array(7).fill(null);\n    return {\n      weekGrid: weekGrid,\n      days: days\n    };\n  });\n};\nfunction getIndexCount(index) {\n  if (index > startAtIndex) {\n    return index - startAtIndex;\n  }\n  return -(startAtIndex - index);\n}\nfunction weeksOffset(index) {\n  if (index === startAtIndex) {\n    return 0;\n  }\n  var off = 0;\n  if (index > startAtIndex) {\n    for (var i = 0; i < index - startAtIndex; i++) {\n      var cIndex = startAtIndex + i;\n      off += gridCounts[cIndex] || getGridCount(cIndex);\n    }\n  } else {\n    for (var _i = 0; _i < startAtIndex - index; _i++) {\n      var _cIndex = startAtIndex - _i - 1;\n      off -= gridCounts[_cIndex] || getGridCount(_cIndex);\n    }\n  }\n  return off;\n}\nexport function getIndexFromHorizontalOffset(offset, width) {\n  return startAtIndex + Math.floor(offset / width);\n}\nexport function getIndexFromVerticalOffset(offset) {\n  var estimatedIndex = startAtIndex + Math.ceil(offset / estimatedMonthHeight);\n  var realOffset = getVerticalMonthsOffset(estimatedIndex);\n  var difference = (realOffset - beginOffset - offset) / estimatedMonthHeight;\n  if (difference >= 1 || difference <= -1) {\n    estimatedIndex -= Math.floor(difference);\n  }\n  return estimatedIndex;\n}\nexport function getHorizontalMonthOffset(index, width) {\n  if (index < 0) {\n    return 0;\n  }\n  return width * index;\n}\nexport function getVerticalMonthsOffset(index) {\n  var count = getIndexCount(index);\n  var ob = weeksOffset(index);\n  var monthsHeight = weekSize * ob;\n  var c = monthsHeight + count * (dayNamesHeight + montHeaderHeight);\n  return (c || 0) + beginOffset;\n}\nexport function getMonthHeight(scrollMode, index) {\n  var calendarHeight = getCalendarHeaderHeight(scrollMode);\n  var gc = getGridCount(index);\n  var currentMonthHeight = weekSize * gc;\n  var extraHeight = scrollMode === 'horizontal' ? monthHeaderSingleHeight : montHeaderHeight;\n  var c = calendarHeight + currentMonthHeight + extraHeight;\n  return c || 0;\n}\nexport default React.memo(Month);","map":{"version":3,"names":["React","StyleSheet","View","IconButton","Text","useTheme","TouchableRipple","Day","EmptyDay","addMonths","areDatesOnSameDay","daySize","getDaysInMonth","getFirstDayOfMonth","getRealIndex","getGridCount","isDateBetween","gridCounts","showWeekDay","startAtIndex","beginOffset","estimatedMonthHeight","useRangeChecker","getCalendarHeaderHeight","dayNamesHeight","useTextColorOnPrimary","Month","props","index","mode","date","dates","startDate","endDate","onPressYear","selectingYear","onPressDate","scrollMode","primaryColor","selectColor","roundness","disableWeekDays","locale","validRange","theme","textColorOnPrimary","realIndex","isHorizontal","_useRangeChecker","isDisabled","isWithinValidRange","_React$useMemo","useMemo","md","Date","y","getFullYear","m","getMonth","formatter","Intl","DateTimeFormat","month","monthName","format","year","grid","today","daysInMonth","dayOfWeek","emptyDays","monthGrid","map","_ref","days","weekGrid","weekIndex","generatedDays","_","dayIndex","isFirstWeek","realDayIndex","beforeWeekDay","dayOfMonth","afterWeekDay","day","isToday","inRange","disabled","selected","leftCrop","rightCrop","isFirstDayOfMonth","isLastDayOfMonth","selectedStartDay","selectedEndDay","safeDates","some","d","yesterday","tomorrow","yesterdaySelected","tomorrowSelected","isWithinOptionalValidRange","textFont","isV3","fonts","titleSmall","medium","createElement","style","styles","height","getMonthHeight","monthHeader","marginTop","monthHeaderSingleMarginTop","marginBottom","monthHeaderSingleMarginBottom","onPress","undefined","accessibilityRole","accessibilityLabel","yearButton","borderRadius","yearButtonInner","monthLabel","_objectSpread","color","colors","onSurfaceVariant","onSurface","selectable","opacity1","opacity0","icon","_ref2","week","key","filter","gd","weekMargin","weekSize","montHeaderHeight","monthHeaderSingleHeight","create","flexDirection","justifyContent","overflow","fontSize","opacity","alignSelf","marginLeft","paddingLeft","alignItems","Array","fill","getIndexCount","weeksOffset","off","i","cIndex","getIndexFromHorizontalOffset","offset","width","Math","floor","getIndexFromVerticalOffset","estimatedIndex","ceil","realOffset","getVerticalMonthsOffset","difference","getHorizontalMonthOffset","count","ob","monthsHeight","c","calendarHeight","gc","currentMonthHeight","extraHeight","memo"],"sources":["C:\\Users\\jonat\\OneDrive\\Escritorio\\Segundo_Momento\\node_modules\\react-native-paper-dates\\src\\Date\\Month.tsx"],"sourcesContent":["import * as React from 'react'\nimport { StyleSheet, View } from 'react-native'\nimport {\n  IconButton,\n  Text,\n  useTheme,\n  TouchableRipple,\n  MD2Theme,\n} from 'react-native-paper'\nimport Day, { EmptyDay } from './Day'\n\nimport {\n  addMonths,\n  areDatesOnSameDay,\n  daySize,\n  DisableWeekDaysType,\n  getDaysInMonth,\n  getFirstDayOfMonth,\n  getRealIndex,\n  getGridCount,\n  isDateBetween,\n  gridCounts,\n  showWeekDay,\n  startAtIndex,\n  beginOffset,\n  estimatedMonthHeight,\n  useRangeChecker,\n} from './dateUtils'\nimport { getCalendarHeaderHeight } from './CalendarHeader'\nimport type {\n  CalendarDate,\n  CalendarDates,\n  ModeType,\n  ValidRangeType,\n} from './Calendar'\nimport { dayNamesHeight } from './DayNames'\nimport { useTextColorOnPrimary } from '../utils'\n\ninterface BaseMonthProps {\n  locale: undefined | string\n  scrollMode: 'horizontal' | 'vertical'\n  disableWeekDays?: DisableWeekDaysType\n  mode: ModeType\n  index: number\n  onPressYear: (year: number) => any\n  selectingYear: boolean\n  onPressDate: (date: Date) => any\n  primaryColor: string\n  selectColor: string\n  roundness: number\n  validRange?: ValidRangeType\n\n  // some of these should be required in final implementation\n  startDate?: CalendarDate\n  endDate?: CalendarDate\n  date?: CalendarDate\n  dates?: CalendarDates\n}\n\ninterface MonthRangeProps extends BaseMonthProps {\n  mode: 'range'\n  startDate: CalendarDate\n  endDate: CalendarDate\n}\n\ninterface MonthSingleProps extends BaseMonthProps {\n  mode: 'single'\n  date: CalendarDate\n}\n\ninterface MonthMultiProps extends BaseMonthProps {\n  mode: 'multiple'\n  dates: CalendarDates\n}\n\nfunction Month(props: MonthSingleProps | MonthRangeProps | MonthMultiProps) {\n  const {\n    index,\n    mode,\n    date,\n    dates,\n    startDate,\n    endDate,\n    onPressYear,\n    selectingYear,\n    onPressDate,\n    scrollMode,\n    primaryColor,\n    selectColor,\n    roundness,\n    disableWeekDays,\n    locale,\n    validRange,\n  } = props\n  const theme = useTheme()\n  const textColorOnPrimary = useTextColorOnPrimary()\n  const realIndex = getRealIndex(index)\n  const isHorizontal = scrollMode === 'horizontal'\n  const { isDisabled, isWithinValidRange } = useRangeChecker(validRange)\n  const { monthName, month, year } = React.useMemo(() => {\n    const md = addMonths(new Date(), realIndex)\n    const y = md.getFullYear()\n    const m = md.getMonth()\n    const formatter = new Intl.DateTimeFormat(locale, {\n      month: 'long',\n    })\n    return { monthName: formatter.format(md), month: m, year: y }\n  }, [realIndex, locale])\n\n  const grid = React.useMemo(() => {\n    const today = new Date()\n\n    const daysInMonth = getDaysInMonth({ year, month })\n    const dayOfWeek = getFirstDayOfMonth({ year, month })\n    const emptyDays = dayOfWeek\n\n    return monthGrid(index).map(({ days, weekGrid }) => {\n      return {\n        weekIndex: weekGrid,\n        generatedDays: days.map((_, dayIndex) => {\n          const isFirstWeek = weekGrid === 0\n          const realDayIndex = emptyDays - dayIndex\n          const beforeWeekDay = isFirstWeek && realDayIndex > 0\n          const dayOfMonth = weekGrid * 7 + dayIndex - emptyDays + 1\n          const afterWeekDay = dayOfMonth > daysInMonth\n\n          const day = new Date(year, month, dayOfMonth)\n          const isToday = areDatesOnSameDay(day, today)\n\n          let inRange = false\n          let disabled = isDisabled(day)\n          let selected = false\n\n          let leftCrop = dayOfMonth === 1\n          let rightCrop = dayOfMonth === daysInMonth\n\n          const isFirstDayOfMonth = dayOfMonth === 1\n          const isLastDayOfMonth = dayOfMonth === daysInMonth\n\n          if (mode === 'range') {\n            const selectedStartDay = areDatesOnSameDay(day, startDate)\n            const selectedEndDay = areDatesOnSameDay(day, endDate)\n            selected = selectedStartDay || selectedEndDay\n            inRange = isDateBetween(day, {\n              startDate,\n              endDate,\n            })\n            if (selectedStartDay) {\n              leftCrop = true\n            }\n            if (selectedEndDay) {\n              rightCrop = true\n            }\n            if (dayIndex === 0 && !selectedStartDay) {\n              leftCrop = false\n            }\n\n            if (dayIndex === 6 && !selectedEndDay) {\n              rightCrop = false\n            }\n\n            if (\n              (isFirstDayOfMonth && selectedEndDay) ||\n              (isLastDayOfMonth && selectedStartDay)\n            ) {\n              inRange = false\n            }\n          } else if (mode === 'multiple') {\n            const safeDates = dates || []\n            selected = safeDates.some((d) => areDatesOnSameDay(day, d))\n\n            const yesterday = new Date(year, month, dayOfMonth - 1)\n            const tomorrow = new Date(year, month, dayOfMonth + 1)\n\n            const yesterdaySelected = safeDates.some((d) =>\n              areDatesOnSameDay(d, yesterday)\n            )\n            const tomorrowSelected = safeDates.some((d) =>\n              areDatesOnSameDay(d, tomorrow)\n            )\n\n            if (selected) {\n              if (tomorrowSelected && yesterdaySelected) {\n                inRange = true\n              }\n              if (tomorrowSelected && !yesterdaySelected) {\n                inRange = true\n                leftCrop = true\n              }\n\n              if (yesterdaySelected && !tomorrowSelected) {\n                inRange = true\n                rightCrop = true\n              }\n\n              if (isFirstDayOfMonth && !tomorrowSelected) {\n                inRange = false\n              }\n\n              if (isLastDayOfMonth && !yesterdaySelected) {\n                inRange = false\n              }\n\n              if (inRange && !leftCrop && !rightCrop) {\n                selected = false\n              }\n            }\n          } else if (mode === 'single') {\n            selected = areDatesOnSameDay(day, date)\n          }\n\n          const isWithinOptionalValidRange = isWithinValidRange(day)\n\n          if (inRange && !disabled) {\n            disabled = false\n          }\n\n          if (!isWithinOptionalValidRange) {\n            disabled = true\n          }\n\n          return {\n            beforeWeekDay,\n            afterWeekDay,\n            year,\n            month,\n            dayOfMonth,\n            dayIndex,\n            mode,\n            selected,\n            inRange,\n            leftCrop,\n            rightCrop,\n            isToday,\n            disabled,\n          }\n        }),\n      }\n    })\n  }, [\n    year,\n    month,\n    index,\n    isDisabled,\n    mode,\n    isWithinValidRange,\n    startDate,\n    endDate,\n    dates,\n    date,\n  ])\n\n  let textFont = theme?.isV3\n    ? theme.fonts.titleSmall\n    : (theme as any as MD2Theme).fonts.medium\n\n  return (\n    <View style={[styles.month, { height: getMonthHeight(scrollMode, index) }]}>\n      <View\n        style={[\n          styles.monthHeader,\n          isHorizontal\n            ? {\n                marginTop: monthHeaderSingleMarginTop,\n                marginBottom: monthHeaderSingleMarginBottom,\n              }\n            : null,\n        ]}\n      >\n        <TouchableRipple\n          disabled={!isHorizontal}\n          onPress={isHorizontal ? () => onPressYear(year) : undefined}\n          accessibilityRole=\"button\"\n          accessibilityLabel={`${monthName} ${year}`}\n          style={[\n            styles.yearButton,\n            {\n              borderRadius: roundness,\n            },\n          ]}\n        >\n          <View\n            style={[\n              styles.yearButtonInner,\n              {\n                borderRadius: roundness,\n              },\n            ]}\n          >\n            <Text\n              style={[\n                styles.monthLabel,\n                {\n                  ...textFont,\n                  color: theme.isV3\n                    ? theme.colors.onSurfaceVariant\n                    : theme.colors.onSurface,\n                },\n              ]}\n              selectable={false}\n            >\n              {monthName} {year}\n            </Text>\n            <View style={isHorizontal ? styles.opacity1 : styles.opacity0}>\n              <IconButton\n                onPress={isHorizontal ? () => onPressYear(year) : undefined}\n                icon={\n                  selectingYear\n                    ? theme.isV3\n                      ? 'menu-up'\n                      : 'chevron-up'\n                    : theme.isV3\n                    ? 'menu-down'\n                    : 'chevron-down'\n                }\n              />\n            </View>\n          </View>\n        </TouchableRipple>\n      </View>\n      {grid.map(({ weekIndex, generatedDays }) => (\n        <View style={styles.week} key={weekIndex}>\n          {generatedDays\n            .filter((gd) => showWeekDay(gd.dayIndex, disableWeekDays))\n            .map((gd) =>\n              gd.beforeWeekDay || gd.afterWeekDay ? (\n                <EmptyDay key={gd.dayIndex} />\n              ) : (\n                <Day\n                  key={gd.dayIndex}\n                  theme={theme}\n                  day={gd.dayOfMonth}\n                  month={gd.month}\n                  year={gd.year}\n                  selected={gd.selected}\n                  inRange={gd.inRange}\n                  leftCrop={gd.leftCrop}\n                  rightCrop={gd.rightCrop}\n                  onPressDate={onPressDate}\n                  isToday={gd.isToday}\n                  selectColor={selectColor}\n                  primaryColor={primaryColor}\n                  disabled={gd.disabled}\n                  textColorOnPrimary={textColorOnPrimary}\n                />\n              )\n            )}\n        </View>\n      ))}\n    </View>\n  )\n}\n\nexport const weekMargin = 6\nexport const weekSize = daySize + weekMargin\nexport const montHeaderHeight = 56\nexport const monthHeaderSingleMarginTop = 4\nexport const monthHeaderSingleMarginBottom = 8 + 44 + 12\nexport const monthHeaderSingleHeight =\n  monthHeaderSingleMarginTop + monthHeaderSingleMarginBottom\n\nconst styles = StyleSheet.create({\n  week: {\n    flexDirection: 'row',\n    marginBottom: weekMargin,\n    height: daySize,\n  },\n  month: {},\n  monthHeader: {\n    height: montHeaderHeight,\n    justifyContent: 'center',\n    overflow: 'hidden',\n  },\n  monthLabel: { fontSize: 14, opacity: 0.7 },\n  yearButton: { alignSelf: 'flex-start', marginLeft: 6 },\n  yearButtonInner: {\n    paddingLeft: 16,\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  opacity0: { opacity: 0 },\n  opacity1: { opacity: 1 },\n})\n\nconst monthGrid = (index: number) => {\n  return Array(getGridCount(index))\n    .fill(null)\n    .map((_, weekGrid) => {\n      const days = Array(7).fill(null)\n      return { weekGrid, days }\n    })\n}\n\nfunction getIndexCount(index: number): number {\n  if (index > startAtIndex) {\n    return index - startAtIndex\n  }\n\n  return -(startAtIndex - index)\n}\n\nfunction weeksOffset(index: number): number {\n  if (index === startAtIndex) {\n    return 0\n  }\n  let off = 0\n  if (index > startAtIndex) {\n    for (let i = 0; i < index - startAtIndex; i++) {\n      const cIndex = startAtIndex + i\n      off += gridCounts[cIndex] || getGridCount(cIndex)\n    }\n  } else {\n    for (let i = 0; i < startAtIndex - index; i++) {\n      const cIndex = startAtIndex - i - 1\n      off -= gridCounts[cIndex] || getGridCount(cIndex)\n    }\n  }\n  return off\n}\n\nexport function getIndexFromHorizontalOffset(\n  offset: number,\n  width: number\n): number {\n  return startAtIndex + Math.floor(offset / width)\n}\n\nexport function getIndexFromVerticalOffset(offset: number): number {\n  let estimatedIndex = startAtIndex + Math.ceil(offset / estimatedMonthHeight)\n\n  const realOffset = getVerticalMonthsOffset(estimatedIndex)\n  const difference = (realOffset - beginOffset - offset) / estimatedMonthHeight\n  if (difference >= 1 || difference <= -1) {\n    estimatedIndex -= Math.floor(difference)\n  }\n  return estimatedIndex\n}\n\nexport function getHorizontalMonthOffset(index: number, width: number) {\n  if (index < 0) {\n    return 0\n  }\n  return width * index\n}\n\nexport function getVerticalMonthsOffset(index: number) {\n  const count = getIndexCount(index)\n  const ob = weeksOffset(index)\n  const monthsHeight = weekSize * ob\n  const c = monthsHeight + count * (dayNamesHeight + montHeaderHeight)\n\n  return (c || 0) + beginOffset\n}\n\nexport function getMonthHeight(\n  scrollMode: 'horizontal' | 'vertical',\n  index: number\n): number {\n  const calendarHeight = getCalendarHeaderHeight(scrollMode)\n  const gc = getGridCount(index)\n\n  const currentMonthHeight = weekSize * gc\n  const extraHeight =\n    scrollMode === 'horizontal' ? monthHeaderSingleHeight : montHeaderHeight\n  const c = calendarHeight + currentMonthHeight + extraHeight\n  return c || 0\n}\n\nexport default React.memo(Month)\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}