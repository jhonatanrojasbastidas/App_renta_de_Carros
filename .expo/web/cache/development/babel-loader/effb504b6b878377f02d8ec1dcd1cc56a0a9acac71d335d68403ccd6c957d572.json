{"ast":null,"code":"import * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Text } from 'react-native-paper';\nimport { circleSize } from \"./timeUtils\";\nimport { useTextColorOnPrimary } from \"../utils\";\nfunction AnalogClockMinutes(_ref) {\n  var minutes = _ref.minutes;\n  var range = getMinuteNumbers(circleSize, 12);\n  var color = useTextColorOnPrimary();\n  return React.createElement(React.Fragment, null, range.map(function (a, i) {\n    var currentMinutes = i * 5;\n    var isZero = currentMinutes === 0;\n    var isCurrent = currentMinutes - 1 <= minutes && currentMinutes + 1 >= minutes;\n    if (isZero) {\n      isCurrent = minutes >= 59 || currentMinutes + 1 >= minutes;\n    }\n    return React.createElement(View, {\n      key: i,\n      pointerEvents: \"none\",\n      style: [styles.outerHourRoot, {\n        top: a[1] || 0,\n        left: a[0] || 0\n      }]\n    }, React.createElement(View, {\n      style: styles.outerHourInner\n    }, React.createElement(Text, {\n      style: isCurrent ? {\n        color: color\n      } : undefined,\n      selectable: false,\n      variant: \"bodyLarge\"\n    }, isZero ? '00' : currentMinutes)));\n  }));\n}\nvar styles = StyleSheet.create({\n  outerHourRoot: {\n    position: 'absolute',\n    justifyContent: 'center',\n    alignItems: 'center',\n    zIndex: 20,\n    width: 48,\n    height: 48,\n    marginLeft: -24,\n    marginTop: -24,\n    borderRadius: 24\n  },\n  outerHourInner: {\n    borderRadius: 24\n  },\n  innerHourRoot: {\n    position: 'absolute',\n    zIndex: 20,\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: 40,\n    height: 40,\n    marginLeft: -20,\n    marginTop: -20,\n    borderRadius: 20\n  },\n  innerHourInner: {\n    borderRadius: 20\n  },\n  innerHourText: {\n    fontSize: 13\n  },\n  textWhite: {\n    color: '#fff'\n  }\n});\nfunction getMinuteNumbers(size, count) {\n  var angle = 0;\n  var step = 2 * Math.PI / count;\n  var radius = size / 2.5;\n  angle = angle = -90 * Math.PI / 180;\n  return Array(12).fill(true).map(function () {\n    var x = Math.round(size / 2 + radius * Math.cos(angle));\n    var y = Math.round(size / 2 + radius * Math.sin(angle));\n    angle += step;\n    return [x, y];\n  });\n}\nexport default React.memo(AnalogClockMinutes);","map":{"version":3,"names":["React","View","StyleSheet","Text","circleSize","useTextColorOnPrimary","AnalogClockMinutes","_ref","minutes","range","getMinuteNumbers","color","createElement","Fragment","map","a","i","currentMinutes","isZero","isCurrent","key","pointerEvents","style","styles","outerHourRoot","top","left","outerHourInner","undefined","selectable","variant","create","position","justifyContent","alignItems","zIndex","width","height","marginLeft","marginTop","borderRadius","innerHourRoot","innerHourInner","innerHourText","fontSize","textWhite","size","count","angle","step","Math","PI","radius","Array","fill","x","round","cos","y","sin","memo"],"sources":["C:\\Users\\jonat\\OneDrive\\Escritorio\\segundoTrabajoRN-master\\node_modules\\react-native-paper-dates\\src\\Time\\AnalogClockMinutes.tsx"],"sourcesContent":["import * as React from 'react'\nimport { View, StyleSheet } from 'react-native'\nimport { Text } from 'react-native-paper'\nimport { circleSize } from './timeUtils'\nimport { useTextColorOnPrimary } from '../utils'\n\nfunction AnalogClockMinutes({ minutes }: { minutes: number }) {\n  const range = getMinuteNumbers(circleSize, 12)\n  const color = useTextColorOnPrimary()\n  return (\n    <>\n      {range.map((a, i) => {\n        const currentMinutes = i * 5\n        const isZero = currentMinutes === 0\n        let isCurrent =\n          currentMinutes - 1 <= minutes && currentMinutes + 1 >= minutes\n        if (isZero) {\n          isCurrent = minutes >= 59 || currentMinutes + 1 >= minutes\n        }\n        return (\n          <View\n            key={i}\n            pointerEvents=\"none\"\n            style={[\n              styles.outerHourRoot,\n              {\n                top: a[1] || 0,\n                left: a[0] || 0,\n              },\n            ]}\n          >\n            <View style={styles.outerHourInner}>\n              <Text\n                style={isCurrent ? { color } : undefined}\n                selectable={false}\n                variant=\"bodyLarge\"\n              >\n                {isZero ? '00' : currentMinutes}\n              </Text>\n            </View>\n          </View>\n        )\n      })}\n    </>\n  )\n}\n\nconst styles = StyleSheet.create({\n  outerHourRoot: {\n    position: 'absolute',\n    justifyContent: 'center',\n    alignItems: 'center',\n    zIndex: 20,\n    width: 48,\n    height: 48,\n    marginLeft: -24,\n    marginTop: -24,\n    borderRadius: 24,\n  },\n  outerHourInner: { borderRadius: 24 },\n  innerHourRoot: {\n    position: 'absolute',\n    zIndex: 20,\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: 40,\n    height: 40,\n    marginLeft: -20,\n    marginTop: -20,\n    borderRadius: 20,\n  },\n  innerHourInner: { borderRadius: 20 },\n  innerHourText: { fontSize: 13 },\n  textWhite: { color: '#fff' },\n})\n\nfunction getMinuteNumbers(size: number, count: number) {\n  let angle = 0\n  let step = (2 * Math.PI) / count\n  let radius = size / 2.5\n\n  angle = angle = (-90 * Math.PI) / 180\n\n  return Array(12)\n    .fill(true)\n    .map(() => {\n      let x = Math.round(size / 2 + radius * Math.cos(angle))\n      let y = Math.round(size / 2 + radius * Math.sin(angle))\n      angle += step\n      return [x, y]\n    })\n}\n\nexport default React.memo(AnalogClockMinutes)\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}