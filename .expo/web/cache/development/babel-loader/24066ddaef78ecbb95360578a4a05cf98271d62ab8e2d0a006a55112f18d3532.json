{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"visible\", \"animationType\", \"disableStatusBar\", \"disableStatusBarPadding\", \"inputEnabled\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport { useTheme } from 'react-native-paper';\nimport DatePickerModalContent from \"./DatePickerModalContent\";\nimport { useHeaderBackgroundColor, useHeaderColorIsLight } from \"../utils\";\nexport function DatePickerModal(props) {\n  var theme = useTheme();\n  var dimensions = useWindowDimensions();\n  var visible = props.visible,\n    animationType = props.animationType,\n    disableStatusBar = props.disableStatusBar,\n    disableStatusBarPadding = props.disableStatusBarPadding,\n    inputEnabled = props.inputEnabled,\n    rest = _objectWithoutProperties(props, _excluded);\n  var animationTypeCalculated = animationType || Platform.select({\n    web: 'none',\n    default: 'slide'\n  });\n  var isLight = useHeaderColorIsLight();\n  var headerBackgroundColor = useHeaderBackgroundColor();\n  return React.createElement(View, {\n    style: [StyleSheet.absoluteFill],\n    pointerEvents: \"box-none\"\n  }, React.createElement(Modal, {\n    animationType: animationTypeCalculated,\n    transparent: true,\n    visible: visible,\n    onRequestClose: rest.onDismiss,\n    presentationStyle: \"overFullScreen\",\n    supportedOrientations: supportedOrientations,\n    statusBarTranslucent: true\n  }, React.createElement(React.Fragment, null, React.createElement(TouchableWithoutFeedback, {\n    onPress: rest.onDismiss\n  }, React.createElement(View, {\n    style: [StyleSheet.absoluteFill, styles.modalBackground, {\n      backgroundColor: theme.colors.backdrop\n    }]\n  })), React.createElement(View, {\n    style: [StyleSheet.absoluteFill, styles.modalRoot],\n    pointerEvents: \"box-none\"\n  }, React.createElement(View, {\n    style: [styles.modalContent, {\n      backgroundColor: theme.colors.surface\n    }, dimensions.width > 650 ? styles.modalContentBig : null]\n  }, disableStatusBar ? null : React.createElement(StatusBar, {\n    translucent: true,\n    barStyle: isLight ? 'dark-content' : 'light-content'\n  }), disableStatusBarPadding ? null : React.createElement(View, {\n    style: [{\n      height: StatusBar.currentHeight,\n      backgroundColor: headerBackgroundColor\n    }]\n  }), React.createElement(DatePickerModalContent, _extends({}, rest, {\n    inputEnabled: inputEnabled,\n    disableSafeTop: disableStatusBar\n  })))))));\n}\nvar supportedOrientations = ['portrait', 'portrait-upside-down', 'landscape', 'landscape-left', 'landscape-right'];\nvar styles = StyleSheet.create({\n  modalRoot: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    flex: 1\n  },\n  modalBackground: {\n    flex: 1\n  },\n  modalContent: {\n    flex: 1,\n    width: '100%'\n  },\n  modalContentBig: {\n    maxWidth: 600,\n    maxHeight: 800,\n    borderRadius: 10,\n    width: '100%',\n    overflow: 'hidden'\n  }\n});\nexport default React.memo(DatePickerModal);","map":{"version":3,"names":["React","Modal","StyleSheet","TouchableWithoutFeedback","useWindowDimensions","View","Platform","StatusBar","useTheme","DatePickerModalContent","useHeaderBackgroundColor","useHeaderColorIsLight","DatePickerModal","props","theme","dimensions","visible","animationType","disableStatusBar","disableStatusBarPadding","inputEnabled","rest","_objectWithoutProperties","_excluded","animationTypeCalculated","select","web","default","isLight","headerBackgroundColor","createElement","style","absoluteFill","pointerEvents","transparent","onRequestClose","onDismiss","presentationStyle","supportedOrientations","statusBarTranslucent","Fragment","onPress","styles","modalBackground","backgroundColor","colors","backdrop","modalRoot","modalContent","surface","width","modalContentBig","translucent","barStyle","height","currentHeight","_extends","disableSafeTop","create","justifyContent","alignItems","flex","maxWidth","maxHeight","borderRadius","overflow","memo"],"sources":["C:\\Users\\jonat\\OneDrive\\Escritorio\\segundoTrabajoRN-master\\node_modules\\react-native-paper-dates\\src\\Date\\DatePickerModal.tsx"],"sourcesContent":["import * as React from 'react'\nimport {\n  Modal,\n  StyleSheet,\n  TouchableWithoutFeedback,\n  useWindowDimensions,\n  View,\n  Platform,\n  StatusBar,\n} from 'react-native'\n\nimport { useTheme } from 'react-native-paper'\nimport DatePickerModalContent, {\n  DatePickerModalContentMultiProps,\n  DatePickerModalContentRangeProps,\n  DatePickerModalContentSingleProps,\n} from './DatePickerModalContent'\nimport { useHeaderBackgroundColor, useHeaderColorIsLight } from '../utils'\n\ninterface DatePickerModalProps {\n  visible: boolean\n  animationType?: 'slide' | 'fade' | 'none'\n  disableStatusBar?: boolean\n  disableStatusBarPadding?: boolean\n  inputEnabled?: boolean\n}\n\nexport interface DatePickerModalSingleProps\n  extends DatePickerModalContentSingleProps,\n    DatePickerModalProps {}\n\nexport interface DatePickerModalMultiProps\n  extends DatePickerModalContentMultiProps,\n    DatePickerModalProps {}\n\nexport interface DatePickerModalRangeProps\n  extends DatePickerModalContentRangeProps,\n    DatePickerModalProps {}\n\nexport function DatePickerModal(\n  props:\n    | DatePickerModalRangeProps\n    | DatePickerModalSingleProps\n    | DatePickerModalMultiProps\n) {\n  const theme = useTheme()\n  const dimensions = useWindowDimensions()\n  const {\n    visible,\n    animationType,\n    disableStatusBar,\n    disableStatusBarPadding,\n    inputEnabled,\n    ...rest\n  } = props\n  const animationTypeCalculated =\n    animationType ||\n    Platform.select({\n      web: 'none',\n      default: 'slide',\n    })\n\n  const isLight = useHeaderColorIsLight()\n  const headerBackgroundColor = useHeaderBackgroundColor()\n\n  return (\n    <View style={[StyleSheet.absoluteFill]} pointerEvents=\"box-none\">\n      <Modal\n        animationType={animationTypeCalculated}\n        transparent={true}\n        visible={visible}\n        onRequestClose={rest.onDismiss}\n        presentationStyle=\"overFullScreen\"\n        supportedOrientations={supportedOrientations}\n        //@ts-ignore\n        statusBarTranslucent={true}\n      >\n        <>\n          <TouchableWithoutFeedback onPress={rest.onDismiss}>\n            <View\n              style={[\n                StyleSheet.absoluteFill,\n                styles.modalBackground,\n                { backgroundColor: theme.colors.backdrop },\n              ]}\n            />\n          </TouchableWithoutFeedback>\n          <View\n            style={[StyleSheet.absoluteFill, styles.modalRoot]}\n            pointerEvents=\"box-none\"\n          >\n            <View\n              style={[\n                styles.modalContent,\n                { backgroundColor: theme.colors.surface },\n                dimensions.width > 650 ? styles.modalContentBig : null,\n              ]}\n            >\n              {disableStatusBar ? null : (\n                <StatusBar\n                  translucent={true}\n                  barStyle={isLight ? 'dark-content' : 'light-content'}\n                />\n              )}\n              {disableStatusBarPadding ? null : (\n                <View\n                  style={[\n                    {\n                      height: StatusBar.currentHeight,\n                      backgroundColor: headerBackgroundColor,\n                    },\n                  ]}\n                />\n              )}\n              <DatePickerModalContent\n                {...rest}\n                inputEnabled={inputEnabled}\n                disableSafeTop={disableStatusBar}\n              />\n            </View>\n          </View>\n        </>\n      </Modal>\n    </View>\n  )\n}\nconst supportedOrientations: any = [\n  'portrait',\n  'portrait-upside-down',\n  'landscape',\n  'landscape-left',\n  'landscape-right',\n]\n\nconst styles = StyleSheet.create({\n  modalRoot: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    flex: 1,\n  },\n  modalBackground: {\n    flex: 1,\n  },\n  modalContent: {\n    flex: 1,\n    width: '100%',\n  },\n  modalContentBig: {\n    maxWidth: 600,\n    maxHeight: 800,\n    borderRadius: 10,\n    width: '100%',\n    overflow: 'hidden',\n  },\n})\n\nexport default React.memo(DatePickerModal)\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}