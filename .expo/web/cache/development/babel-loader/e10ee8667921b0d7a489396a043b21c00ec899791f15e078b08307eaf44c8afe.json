{"ast":null,"code":"import * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Text } from 'react-native-paper';\nimport { circleSize } from \"./timeUtils\";\nimport { useTextColorOnPrimary } from \"../utils\";\nfunction AnalogClockHours(_ref) {\n  var is24Hour = _ref.is24Hour,\n    hours = _ref.hours;\n  var outerRange = getHourNumbers(false, circleSize, 12, 12);\n  var innerRange = getHourNumbers(true, circleSize, 12, 12);\n  var color = useTextColorOnPrimary();\n  return React.createElement(React.Fragment, null, outerRange.map(function (a, i) {\n    return React.createElement(View, {\n      key: i,\n      pointerEvents: \"none\",\n      style: [styles.outerHourRoot, {\n        top: a[1] || 0,\n        left: a[0] || 0\n      }]\n    }, React.createElement(View, {\n      style: styles.outerHourInner\n    }, React.createElement(Text, {\n      style: !is24Hour && i + 1 === hours || hours === i + 1 && hours !== 12 || i + 1 === 12 && hours === 0 ? {\n        color: color\n      } : null,\n      variant: \"bodyLarge\",\n      selectable: false\n    }, is24Hour && i + 1 === 12 ? '00' : i + 1)));\n  }), is24Hour ? innerRange.map(function (a, i) {\n    return React.createElement(View, {\n      key: i,\n      pointerEvents: \"none\",\n      style: [styles.innerHourRoot, {\n        top: a[1] || 0,\n        left: a[0] || 0\n      }]\n    }, React.createElement(View, {\n      style: styles.innerHourInner\n    }, React.createElement(Text, {\n      selectable: false,\n      style: [i + 13 === hours || i + 13 === 24 && hours === 12 ? {\n        color: color\n      } : null],\n      variant: \"bodyLarge\"\n    }, i + 13 === 24 ? '12' : i + 13)));\n  }) : null);\n}\nvar styles = StyleSheet.create({\n  outerHourRoot: {\n    position: 'absolute',\n    justifyContent: 'center',\n    alignItems: 'center',\n    zIndex: 20,\n    width: 48,\n    height: 48,\n    marginLeft: -24,\n    marginTop: -24,\n    borderRadius: 24\n  },\n  outerHourInner: {\n    borderRadius: 24\n  },\n  innerHourRoot: {\n    position: 'absolute',\n    zIndex: 20,\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: 48,\n    height: 48,\n    marginLeft: -24,\n    marginTop: -24,\n    borderRadius: 24\n  },\n  innerHourInner: {\n    borderRadius: 24\n  }\n});\nfunction getHourNumbers(is24Hour, size, count, arrayLength) {\n  var angle = 0;\n  var step = 2 * Math.PI / count;\n  var radius = size / (is24Hour ? 4 : 2.5);\n  angle = -90 * Math.PI / 180 + Math.PI / 6;\n  return Array(arrayLength).fill(true).map(function () {\n    var x = Math.round(size / 2 + radius * Math.cos(angle));\n    var y = Math.round(size / 2 + radius * Math.sin(angle));\n    angle += step;\n    return [x, y];\n  });\n}\nexport default React.memo(AnalogClockHours);","map":{"version":3,"names":["React","View","StyleSheet","Text","circleSize","useTextColorOnPrimary","AnalogClockHours","_ref","is24Hour","hours","outerRange","getHourNumbers","innerRange","color","createElement","Fragment","map","a","i","key","pointerEvents","style","styles","outerHourRoot","top","left","outerHourInner","variant","selectable","innerHourRoot","innerHourInner","create","position","justifyContent","alignItems","zIndex","width","height","marginLeft","marginTop","borderRadius","size","count","arrayLength","angle","step","Math","PI","radius","Array","fill","x","round","cos","y","sin","memo"],"sources":["C:\\Users\\jonat\\OneDrive\\Escritorio\\Segundo_Momento\\node_modules\\react-native-paper-dates\\src\\Time\\AnalogClockHours.tsx"],"sourcesContent":["import * as React from 'react'\nimport { View, StyleSheet } from 'react-native'\nimport { Text } from 'react-native-paper'\nimport { circleSize } from './timeUtils'\nimport { useTextColorOnPrimary } from '../utils'\n\nfunction AnalogClockHours({\n  is24Hour,\n  hours,\n}: {\n  is24Hour: boolean\n  hours: number\n}) {\n  const outerRange = getHourNumbers(false, circleSize, 12, 12)\n  const innerRange = getHourNumbers(true, circleSize, 12, 12)\n  const color = useTextColorOnPrimary()\n\n  return (\n    <>\n      {outerRange.map((a, i) => (\n        <View\n          key={i}\n          pointerEvents=\"none\"\n          style={[\n            styles.outerHourRoot,\n            {\n              top: a[1] || 0,\n              left: a[0] || 0,\n            },\n          ]}\n        >\n          <View style={styles.outerHourInner}>\n            {/* Display 00 instead of 12 for AM hours */}\n            <Text\n              style={\n                (!is24Hour && i + 1 === hours) ||\n                (hours === i + 1 && hours !== 12) ||\n                (i + 1 === 12 && hours === 0)\n                  ? { color }\n                  : null\n              }\n              variant=\"bodyLarge\"\n              selectable={false}\n            >\n              {is24Hour && i + 1 === 12 ? '00' : i + 1}\n            </Text>\n          </View>\n        </View>\n      ))}\n      {is24Hour\n        ? innerRange.map((a, i) => (\n            <View\n              key={i}\n              pointerEvents=\"none\"\n              style={[\n                styles.innerHourRoot,\n                {\n                  top: a[1] || 0,\n                  left: a[0] || 0,\n                },\n              ]}\n            >\n              <View style={styles.innerHourInner}>\n                <Text\n                  selectable={false}\n                  style={[\n                    i + 13 === hours || (i + 13 === 24 && hours === 12)\n                      ? { color }\n                      : null,\n                  ]}\n                  variant=\"bodyLarge\"\n                >\n                  {i + 13 === 24 ? '12' : i + 13}\n                </Text>\n              </View>\n            </View>\n          ))\n        : null}\n    </>\n  )\n}\n\nconst styles = StyleSheet.create({\n  outerHourRoot: {\n    position: 'absolute',\n    justifyContent: 'center',\n    alignItems: 'center',\n    zIndex: 20,\n    width: 48,\n    height: 48,\n    marginLeft: -24,\n    marginTop: -24,\n    borderRadius: 24,\n  },\n  outerHourInner: { borderRadius: 24 },\n  innerHourRoot: {\n    position: 'absolute',\n    zIndex: 20,\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: 48,\n    height: 48,\n    marginLeft: -24,\n    marginTop: -24,\n    borderRadius: 24,\n  },\n  innerHourInner: { borderRadius: 24 },\n})\n\nfunction getHourNumbers(\n  is24Hour: boolean,\n  size: number,\n  count: number,\n  arrayLength: number\n) {\n  let angle = 0\n  let step = (2 * Math.PI) / count\n  let radius = size / (is24Hour ? 4 : 2.5)\n\n  angle = (-90 * Math.PI) / 180 + Math.PI / 6\n\n  return Array(arrayLength)\n    .fill(true)\n    .map(() => {\n      let x = Math.round(size / 2 + radius * Math.cos(angle))\n      let y = Math.round(size / 2 + radius * Math.sin(angle))\n      angle += step\n      return [x, y]\n    })\n}\n\nexport default React.memo(AnalogClockHours)\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}