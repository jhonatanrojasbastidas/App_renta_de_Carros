{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Text, TouchableRipple, useTheme } from 'react-native-paper';\nimport { useMemo } from 'react';\nimport Color from 'color';\nimport { inputTypes, useSwitchColors } from \"./timeUtils\";\nimport { DisplayModeContext } from \"./TimePicker\";\nexport default function AmPmSwitcher(_ref) {\n  var onChange = _ref.onChange,\n    hours = _ref.hours,\n    inputType = _ref.inputType;\n  var _React$useContext = React.useContext(DisplayModeContext),\n    setMode = _React$useContext.setMode,\n    mode = _React$useContext.mode;\n  var theme = useTheme();\n  var backgroundColor = useMemo(function () {\n    if (theme.isV3) {\n      return theme.colors.outline;\n    }\n    return Color(theme.dark ? Color(theme.colors.surface).lighten(1.2).hex() : theme.colors.surface).darken(0.1).hex();\n  }, [theme]);\n  var isAM = mode === 'AM';\n  return React.createElement(View, {\n    style: [styles.root, {\n      borderColor: backgroundColor,\n      borderRadius: theme.roundness * 2,\n      height: inputType === inputTypes.keyboard ? 72 : 80,\n      marginBottom: inputType === 'keyboard' ? 24 : 0\n    }]\n  }, React.createElement(SwitchButton, {\n    label: \"AM\",\n    onPress: function onPress() {\n      setMode('AM');\n      if (hours - 12 >= 0) {\n        onChange(hours - 12);\n      }\n    },\n    selected: isAM,\n    disabled: isAM\n  }), React.createElement(View, {\n    style: [styles.switchSeparator, {\n      backgroundColor: backgroundColor\n    }]\n  }), React.createElement(SwitchButton, {\n    label: \"PM\",\n    onPress: function onPress() {\n      setMode('PM');\n      if (hours + 12 <= 24) {\n        onChange(hours + 12);\n      }\n    },\n    selected: !isAM,\n    disabled: !isAM\n  }));\n}\nfunction SwitchButton(_ref2) {\n  var label = _ref2.label,\n    onPress = _ref2.onPress,\n    selected = _ref2.selected,\n    disabled = _ref2.disabled;\n  var theme = useTheme();\n  var _useSwitchColors = useSwitchColors(selected),\n    backgroundColor = _useSwitchColors.backgroundColor,\n    color = _useSwitchColors.color;\n  var textFont = theme !== null && theme !== void 0 && theme.isV3 ? theme.fonts.titleMedium : theme.fonts.medium;\n  return React.createElement(TouchableRipple, {\n    onPress: onPress,\n    style: styles.switchButton,\n    accessibilityLabel: label,\n    accessibilityTraits: disabled ? ['button', 'disabled'] : 'button',\n    accessibilityComponentType: \"button\",\n    accessibilityRole: \"button\",\n    accessibilityState: {\n      disabled: disabled\n    },\n    disabled: disabled\n  }, React.createElement(View, {\n    style: [styles.switchButtonInner, {\n      backgroundColor: backgroundColor\n    }]\n  }, React.createElement(Text, {\n    selectable: false,\n    style: [_objectSpread(_objectSpread({}, textFont), {}, {\n      color: color\n    })]\n  }, label)));\n}\nvar styles = StyleSheet.create({\n  root: {\n    width: 52,\n    borderWidth: 1,\n    overflow: 'hidden'\n  },\n  switchSeparator: {\n    height: 1,\n    width: 52\n  },\n  switchButton: {\n    flex: 1\n  },\n  switchButtonInner: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["React","View","StyleSheet","Text","TouchableRipple","useTheme","useMemo","Color","inputTypes","useSwitchColors","DisplayModeContext","AmPmSwitcher","_ref","onChange","hours","inputType","_React$useContext","useContext","setMode","mode","theme","backgroundColor","isV3","colors","outline","dark","surface","lighten","hex","darken","isAM","createElement","style","styles","root","borderColor","borderRadius","roundness","height","keyboard","marginBottom","SwitchButton","label","onPress","selected","disabled","switchSeparator","_ref2","_useSwitchColors","color","textFont","fonts","titleMedium","medium","switchButton","accessibilityLabel","accessibilityTraits","accessibilityComponentType","accessibilityRole","accessibilityState","switchButtonInner","selectable","_objectSpread","create","width","borderWidth","overflow","flex","alignItems","justifyContent"],"sources":["C:\\Users\\jonat\\OneDrive\\Escritorio\\Segundo_Momento\\node_modules\\react-native-paper-dates\\src\\Time\\AmPmSwitcher.tsx"],"sourcesContent":["import * as React from 'react'\nimport { View, StyleSheet } from 'react-native'\nimport { MD2Theme, Text, TouchableRipple, useTheme } from 'react-native-paper'\nimport { useMemo } from 'react'\nimport Color from 'color'\nimport { inputTypes, PossibleInputTypes, useSwitchColors } from './timeUtils'\nimport { DisplayModeContext } from './TimePicker'\n\nexport default function AmPmSwitcher({\n  onChange,\n  hours,\n  inputType,\n}: {\n  hours: number\n  onChange: (newHours: number) => any\n  inputType: PossibleInputTypes\n}) {\n  const { setMode, mode } = React.useContext(DisplayModeContext)\n  const theme = useTheme()\n  const backgroundColor = useMemo<string>(() => {\n    if (theme.isV3) {\n      return theme.colors.outline\n    }\n    return Color(\n      theme.dark\n        ? Color(theme.colors.surface).lighten(1.2).hex()\n        : theme.colors.surface\n    )\n      .darken(0.1)\n      .hex()\n  }, [theme])\n\n  const isAM = mode === 'AM'\n  return (\n    <View\n      style={[\n        styles.root,\n        // eslint-disable-next-line react-native/no-inline-styles\n        {\n          borderColor: backgroundColor,\n          borderRadius: theme.roundness * 2,\n          height: inputType === inputTypes.keyboard ? 72 : 80,\n          marginBottom: inputType === 'keyboard' ? 24 : 0,\n        },\n      ]}\n    >\n      <SwitchButton\n        label=\"AM\"\n        onPress={() => {\n          setMode('AM')\n          if (hours - 12 >= 0) {\n            onChange(hours - 12)\n          }\n        }}\n        selected={isAM}\n        disabled={isAM}\n      />\n      <View style={[styles.switchSeparator, { backgroundColor }]} />\n      <SwitchButton\n        label=\"PM\"\n        onPress={() => {\n          setMode('PM')\n          if (hours + 12 <= 24) {\n            onChange(hours + 12)\n          }\n        }}\n        selected={!isAM}\n        disabled={!isAM}\n      />\n    </View>\n  )\n}\n\nfunction SwitchButton({\n  label,\n  onPress,\n  selected,\n  disabled,\n}: {\n  label: string\n  onPress: (() => any) | undefined\n  selected: boolean\n  disabled: boolean\n}) {\n  const theme = useTheme()\n  const { backgroundColor, color } = useSwitchColors(selected)\n\n  let textFont = theme?.isV3\n    ? theme.fonts.titleMedium\n    : (theme as any as MD2Theme).fonts.medium\n\n  return (\n    <TouchableRipple\n      onPress={onPress}\n      style={styles.switchButton}\n      accessibilityLabel={label}\n      // @ts-ignore old React Native versions\n      accessibilityTraits={disabled ? ['button', 'disabled'] : 'button'}\n      // @ts-ignore old React Native versions\n      accessibilityComponentType=\"button\"\n      accessibilityRole=\"button\"\n      accessibilityState={{ disabled }}\n      disabled={disabled}\n    >\n      <View style={[styles.switchButtonInner, { backgroundColor }]}>\n        <Text\n          selectable={false}\n          style={[\n            {\n              ...textFont,\n              color: color,\n            },\n          ]}\n        >\n          {label}\n        </Text>\n      </View>\n    </TouchableRipple>\n  )\n}\n\nconst styles = StyleSheet.create({\n  root: {\n    width: 52,\n    borderWidth: 1,\n    overflow: 'hidden',\n  },\n  switchSeparator: {\n    height: 1,\n    width: 52,\n  },\n  switchButton: {\n    flex: 1,\n  },\n  switchButtonInner: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}