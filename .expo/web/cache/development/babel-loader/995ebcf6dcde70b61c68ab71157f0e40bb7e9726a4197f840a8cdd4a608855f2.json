{"ast":null,"code":"import * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { IconButton, useTheme } from 'react-native-paper';\nimport DayNames, { dayNamesHeight } from \"./DayNames\";\nimport { getTranslation } from \"../translations/utils\";\nvar buttonContainerHeight = 56;\nvar buttonContainerMarginTop = 4;\nvar buttonContainerMarginBottom = 8;\nexport function getCalendarHeaderHeight(scrollMode) {\n  if (scrollMode === 'horizontal') {\n    return buttonContainerHeight + buttonContainerMarginTop + buttonContainerMarginBottom + dayNamesHeight;\n  }\n  return dayNamesHeight;\n}\nfunction CalendarHeader(_ref) {\n  var scrollMode = _ref.scrollMode,\n    onPrev = _ref.onPrev,\n    onNext = _ref.onNext,\n    disableWeekDays = _ref.disableWeekDays,\n    locale = _ref.locale;\n  var theme = useTheme();\n  var isHorizontal = scrollMode === 'horizontal';\n  return React.createElement(View, {\n    style: styles.datePickerHeader,\n    pointerEvents: 'box-none'\n  }, isHorizontal ? React.createElement(View, {\n    style: styles.buttonContainer,\n    pointerEvents: 'box-none'\n  }, React.createElement(View, {\n    style: styles.spacer,\n    pointerEvents: 'box-none'\n  }), React.createElement(View, {\n    style: [styles.buttonWrapper, {\n      backgroundColor: theme.colors.surface\n    }]\n  }, React.createElement(IconButton, {\n    icon: \"chevron-left\",\n    accessibilityLabel: getTranslation(locale, 'previous'),\n    onPress: onPrev\n  })), React.createElement(View, {\n    style: [styles.buttonWrapper, {\n      backgroundColor: theme.colors.surface\n    }]\n  }, React.createElement(IconButton, {\n    icon: \"chevron-right\",\n    accessibilityLabel: getTranslation(locale, 'next'),\n    onPress: onNext\n  }))) : null, React.createElement(DayNames, {\n    disableWeekDays: disableWeekDays,\n    locale: locale\n  }));\n}\nvar styles = StyleSheet.create({\n  datePickerHeader: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    left: 0,\n    zIndex: 10\n  },\n  buttonContainer: {\n    height: buttonContainerHeight,\n    marginTop: buttonContainerMarginTop,\n    marginBottom: buttonContainerMarginBottom,\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  buttonWrapper: {},\n  spacer: {\n    flex: 1\n  }\n});\nexport default React.memo(CalendarHeader);","map":{"version":3,"names":["React","StyleSheet","View","IconButton","useTheme","DayNames","dayNamesHeight","getTranslation","buttonContainerHeight","buttonContainerMarginTop","buttonContainerMarginBottom","getCalendarHeaderHeight","scrollMode","CalendarHeader","_ref","onPrev","onNext","disableWeekDays","locale","theme","isHorizontal","createElement","style","styles","datePickerHeader","pointerEvents","buttonContainer","spacer","buttonWrapper","backgroundColor","colors","surface","icon","accessibilityLabel","onPress","create","position","top","right","left","zIndex","height","marginTop","marginBottom","flexDirection","alignItems","flex","memo"],"sources":["C:\\Users\\jonat\\OneDrive\\Escritorio\\Segundo_Momento\\node_modules\\react-native-paper-dates\\src\\Date\\CalendarHeader.tsx"],"sourcesContent":["import * as React from 'react'\nimport { StyleSheet, View } from 'react-native'\nimport { IconButton, useTheme } from 'react-native-paper'\nimport DayNames, { dayNamesHeight } from './DayNames'\nimport type { DisableWeekDaysType } from './dateUtils'\nimport { getTranslation } from '../translations/utils'\n\nconst buttonContainerHeight = 56\nconst buttonContainerMarginTop = 4\nconst buttonContainerMarginBottom = 8\n\nexport function getCalendarHeaderHeight(scrollMode: 'horizontal' | 'vertical') {\n  if (scrollMode === 'horizontal') {\n    return (\n      buttonContainerHeight +\n      buttonContainerMarginTop +\n      buttonContainerMarginBottom +\n      dayNamesHeight\n    )\n  }\n  return dayNamesHeight\n}\n\nfunction CalendarHeader({\n  scrollMode,\n  onPrev,\n  onNext,\n  disableWeekDays,\n  locale,\n}: {\n  locale: undefined | string\n  scrollMode: 'horizontal' | 'vertical'\n  onPrev: () => any\n  onNext: () => any\n  disableWeekDays?: DisableWeekDaysType\n}) {\n  const theme = useTheme()\n  const isHorizontal = scrollMode === 'horizontal'\n  return (\n    <View style={styles.datePickerHeader} pointerEvents={'box-none'}>\n      {isHorizontal ? (\n        <View style={styles.buttonContainer} pointerEvents={'box-none'}>\n          <View style={styles.spacer} pointerEvents={'box-none'} />\n          <View\n            style={[\n              styles.buttonWrapper,\n              { backgroundColor: theme.colors.surface },\n            ]}\n          >\n            <IconButton\n              icon=\"chevron-left\"\n              accessibilityLabel={getTranslation(locale, 'previous')}\n              onPress={onPrev}\n            />\n          </View>\n          <View\n            style={[\n              styles.buttonWrapper,\n              { backgroundColor: theme.colors.surface },\n            ]}\n          >\n            <IconButton\n              icon=\"chevron-right\"\n              accessibilityLabel={getTranslation(locale, 'next')}\n              onPress={onNext}\n            />\n          </View>\n        </View>\n      ) : null}\n      <DayNames disableWeekDays={disableWeekDays} locale={locale} />\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  datePickerHeader: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    left: 0,\n    zIndex: 10,\n  },\n  buttonContainer: {\n    height: buttonContainerHeight,\n    marginTop: buttonContainerMarginTop,\n    marginBottom: buttonContainerMarginBottom,\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  buttonWrapper: {},\n  spacer: { flex: 1 },\n})\n\nexport default React.memo(CalendarHeader)\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}