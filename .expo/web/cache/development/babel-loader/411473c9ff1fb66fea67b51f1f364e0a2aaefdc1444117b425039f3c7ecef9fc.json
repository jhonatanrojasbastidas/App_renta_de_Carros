{"ast":null,"code":"import * as React from 'react';\nimport { overlay, useTheme } from 'react-native-paper';\nimport Color from 'color';\nexport function useLatest(value) {\n  var ref = React.useRef(value);\n  ref.current = value;\n  return ref;\n}\nexport function useHeaderBackgroundColor() {\n  var theme = useTheme();\n  if (theme.isV3) {\n    return theme.colors.surface;\n  }\n  return theme.dark && theme.mode === 'adaptive' ? overlay(4, theme.colors.surface) : theme.colors.primary;\n}\nexport function useHeaderColorIsLight() {\n  var theme = useTheme();\n  var background = theme.dark && theme.mode === 'adaptive' ? theme.colors.surface : theme.colors.primary;\n  return Color(background).isLight();\n}\nexport function useHeaderTextColor() {\n  var theme = useTheme();\n  var isLight = useHeaderColorIsLight();\n  if (theme.isV3) {\n    return theme.colors.onSurfaceVariant;\n  }\n  return !isLight ? '#fff' : '#000';\n}\nexport function useTextColorOnPrimary() {\n  var theme = useTheme();\n  var isDark = !Color(theme.colors.primary).isLight();\n  if (theme.isV3) {\n    if (isDark && theme.dark) {\n      return theme.colors.onSurface;\n    } else {\n      return theme.colors.onPrimary;\n    }\n  }\n  return isDark ? '#fff' : '#000';\n}\nexport function range(start, end) {\n  return Array(end - start + 1).fill(null).map(function (_, i) {\n    return start + i;\n  });\n}\nexport function lightenBy(color, ratio) {\n  var lightness = color.lightness();\n  return color.lightness(lightness + (100 - lightness) * ratio);\n}\nexport function darkenBy(color, ratio) {\n  var lightness = color.lightness();\n  return color.lightness(lightness - lightness * ratio);\n}","map":{"version":3,"names":["React","overlay","useTheme","Color","useLatest","value","ref","useRef","current","useHeaderBackgroundColor","theme","isV3","colors","surface","dark","mode","primary","useHeaderColorIsLight","background","isLight","useHeaderTextColor","onSurfaceVariant","useTextColorOnPrimary","isDark","onSurface","onPrimary","range","start","end","Array","fill","map","_","i","lightenBy","color","ratio","lightness","darkenBy"],"sources":["C:\\Users\\jonat\\OneDrive\\Escritorio\\Segundo_Momento\\node_modules\\react-native-paper-dates\\src\\utils.ts"],"sourcesContent":["import * as React from 'react'\nimport {\n  DefaultTheme,\n  MD3DarkTheme,\n  overlay,\n  useTheme,\n} from 'react-native-paper'\nimport Color from 'color'\n\nexport type PaperTheme = typeof MD3DarkTheme | typeof DefaultTheme\n\nexport function useLatest<T>(value: T) {\n  const ref = React.useRef(value)\n  ref.current = value\n  return ref\n}\n\nexport function useHeaderBackgroundColor() {\n  const theme = useTheme()\n  if (theme.isV3) {\n    return theme.colors.surface\n  }\n  return theme.dark && theme.mode === 'adaptive'\n    ? overlay(4, theme.colors.surface)\n    : theme.colors.primary\n}\n\nexport function useHeaderColorIsLight() {\n  const theme = useTheme()\n  const background =\n    theme.dark && theme.mode === 'adaptive'\n      ? theme.colors.surface\n      : theme.colors.primary\n  return Color(background).isLight()\n}\n\nexport function useHeaderTextColor() {\n  const theme = useTheme()\n  const isLight = useHeaderColorIsLight()\n  if (theme.isV3) {\n    return theme.colors.onSurfaceVariant\n  }\n  return !isLight ? '#fff' : '#000'\n}\n\nexport function useTextColorOnPrimary() {\n  const theme = useTheme()\n  const isDark = !Color(theme.colors.primary).isLight()\n\n  if (theme.isV3) {\n    if (isDark && theme.dark) {\n      return theme.colors.onSurface\n    } else {\n      return theme.colors.onPrimary\n    }\n  }\n\n  return isDark ? '#fff' : '#000'\n}\n\nexport function range(start: number, end: number) {\n  return Array(end - start + 1)\n    .fill(null)\n    .map((_, i) => start + i)\n}\n\nexport function lightenBy(color: Color, ratio: number) {\n  const lightness = color.lightness()\n  return color.lightness(lightness + (100 - lightness) * ratio)\n}\n\nexport function darkenBy(color: Color, ratio: number) {\n  const lightness = color.lightness()\n  return color.lightness(lightness - lightness * ratio)\n}\n"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAGEC,OAHF,EAIEC,QAJF,QAKO,oBALP;AAMA,OAAOC,KAAP,MAAkB,OAAlB;AAIA,OAAO,SAASC,SAATA,CAAsBC,KAAtB,EAAgC;EACrC,IAAMC,GAAG,GAAGN,KAAK,CAACO,MAAN,CAAaF,KAAb,CAAZ;EACAC,GAAG,CAACE,OAAJ,GAAcH,KAAd;EACA,OAAOC,GAAP;AACD;AAED,OAAO,SAASG,wBAATA,CAAA,EAAoC;EACzC,IAAMC,KAAK,GAAGR,QAAQ,EAAtB;EACA,IAAIQ,KAAK,CAACC,IAAV,EAAgB;IACd,OAAOD,KAAK,CAACE,MAAN,CAAaC,OAApB;EACD;EACD,OAAOH,KAAK,CAACI,IAAN,IAAcJ,KAAK,CAACK,IAAN,KAAe,UAA7B,GACHd,OAAO,CAAC,CAAD,EAAIS,KAAK,CAACE,MAAN,CAAaC,OAAjB,CADJ,GAEHH,KAAK,CAACE,MAAN,CAAaI,OAFjB;AAGD;AAED,OAAO,SAASC,qBAATA,CAAA,EAAiC;EACtC,IAAMP,KAAK,GAAGR,QAAQ,EAAtB;EACA,IAAMgB,UAAU,GACdR,KAAK,CAACI,IAAN,IAAcJ,KAAK,CAACK,IAAN,KAAe,UAA7B,GACIL,KAAK,CAACE,MAAN,CAAaC,OADjB,GAEIH,KAAK,CAACE,MAAN,CAAaI,OAHnB;EAIA,OAAOb,KAAK,CAACe,UAAD,CAAL,CAAkBC,OAAlB,EAAP;AACD;AAED,OAAO,SAASC,kBAATA,CAAA,EAA8B;EACnC,IAAMV,KAAK,GAAGR,QAAQ,EAAtB;EACA,IAAMiB,OAAO,GAAGF,qBAAqB,EAArC;EACA,IAAIP,KAAK,CAACC,IAAV,EAAgB;IACd,OAAOD,KAAK,CAACE,MAAN,CAAaS,gBAApB;EACD;EACD,OAAO,CAACF,OAAD,GAAW,MAAX,GAAoB,MAA3B;AACD;AAED,OAAO,SAASG,qBAATA,CAAA,EAAiC;EACtC,IAAMZ,KAAK,GAAGR,QAAQ,EAAtB;EACA,IAAMqB,MAAM,GAAG,CAACpB,KAAK,CAACO,KAAK,CAACE,MAAN,CAAaI,OAAd,CAAL,CAA4BG,OAA5B,EAAhB;EAEA,IAAIT,KAAK,CAACC,IAAV,EAAgB;IACd,IAAIY,MAAM,IAAIb,KAAK,CAACI,IAApB,EAA0B;MACxB,OAAOJ,KAAK,CAACE,MAAN,CAAaY,SAApB;IACD,CAFD,MAEO;MACL,OAAOd,KAAK,CAACE,MAAN,CAAaa,SAApB;IACD;EACF;EAED,OAAOF,MAAM,GAAG,MAAH,GAAY,MAAzB;AACD;AAED,OAAO,SAASG,KAATA,CAAeC,KAAf,EAA8BC,GAA9B,EAA2C;EAChD,OAAOC,KAAK,CAACD,GAAG,GAAGD,KAAN,GAAc,CAAf,CAAL,CACJG,IADI,CACC,IADD,EAEJC,GAFI,CAEA,UAACC,CAAD,EAAIC,CAAJ;IAAA,OAAUN,KAAK,GAAGM,CAFlB;EAAA,EAAP;AAGD;AAED,OAAO,SAASC,SAATA,CAAmBC,KAAnB,EAAiCC,KAAjC,EAAgD;EACrD,IAAMC,SAAS,GAAGF,KAAK,CAACE,SAAN,EAAlB;EACA,OAAOF,KAAK,CAACE,SAAN,CAAgBA,SAAS,GAAG,CAAC,MAAMA,SAAP,IAAoBD,KAAhD,CAAP;AACD;AAED,OAAO,SAASE,QAATA,CAAkBH,KAAlB,EAAgCC,KAAhC,EAA+C;EACpD,IAAMC,SAAS,GAAGF,KAAK,CAACE,SAAN,EAAlB;EACA,OAAOF,KAAK,CAACE,SAAN,CAAgBA,SAAS,GAAGA,SAAS,GAAGD,KAAxC,CAAP;AACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}